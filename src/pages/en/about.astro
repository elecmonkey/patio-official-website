---
import Layout from '@/layouts/Layout.astro';
import CompanyCarousel from '@/components/CompanyCarousel';
import picCompany1 from '@/assets/company/pic1.jpg';
import picCompany2 from '@/assets/company/pic2.jpg';
import picCompany3 from '@/assets/company/pic3.jpg';
import iconMathoverflow from '@/assets/academicons/academicons-mathoverflow.svg';
import iconStackoverflow from '@/assets/academicons/academicons-stackoverflow.svg';
import iconElsevier from '@/assets/academicons/academicons-elsevier.svg';
import iconINaturalist from '@/assets/academicons/academicons-inaturalist.svg';
import iconJstor from '@/assets/academicons/academicons-jstor.svg';
import iconClarivate from '@/assets/academicons/academicons-clarivate.svg';
import { getLangFromUrl, useTranslations } from '@/i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const brand = lang === 'en' ? 'Patio Academy' : '攀梯国际';

const storyPoints = t('about.story.points').split('｜');
const metrics = t('about.metrics.items').split('｜');
const coreValues = [
  { icon: 'mentors', title: t('home.features.mentors.title'), description: t('home.features.mentors.desc') },
  { icon: 'personalized', title: t('home.features.personalized.title'), description: t('home.features.personalized.desc') },
  { icon: 'feedback', title: t('home.features.feedback.title'), description: t('home.features.feedback.desc') },
  { icon: 'environment', title: t('home.features.environment.title'), description: t('home.features.environment.desc') }
];

const programs = [
  {
    code: 'A-Level',
    title: t('home.curriculum.alevel.title'),
    summary: t('home.curriculum.alevel.desc'),
    detail: t('home.curriculum.alevel.detail')
  },
  {
    code: 'AP',
    title: t('home.curriculum.ap.title'),
    summary: t('home.curriculum.ap.desc'),
    detail: t('home.curriculum.ap.detail')
  },
  {
    code: 'IB',
    title: t('home.curriculum.ib.title'),
    summary: t('home.curriculum.ib.desc'),
    detail: t('home.curriculum.ib.detail')
  },
  {
    code: 'WACE',
    title: t('home.curriculum.wace.title'),
    summary: t('home.curriculum.wace.desc'),
    detail: t('home.curriculum.wace.detail')
  }
];

const fulltimeItems = t('about.fulltime.items').split('｜');

const competitionIconMap = {
  math: iconMathoverflow.src,
  cs: iconStackoverflow.src,
  chem: iconElsevier.src,
  bio: iconINaturalist.src,
  humanity: iconJstor.src,
  business: iconClarivate.src
} as const;

const competitionCategories = [
  { key: 'math', title: t('home.competition.categories.math.title') },
  { key: 'cs', title: t('home.competition.categories.cs.title') },
  { key: 'chem', title: t('home.competition.categories.chem.title') },
  { key: 'bio', title: t('home.competition.categories.bio.title') },
  { key: 'humanity', title: t('home.competition.categories.humanity.title') },
  { key: 'business', title: t('home.competition.categories.business.title') }
].map((item) => ({
  ...item,
  iconSrc: competitionIconMap[item.key as keyof typeof competitionIconMap] ?? ''
}));

const oxbridgeItems = t('about.oxbridge.items').split('｜');
const processSteps = t('about.process.steps').split('｜');
const aboutCarouselCaptions = t('home.about.carousel.captions').split('｜');
const companyGallery = [
  { src: picCompany1.src, caption: aboutCarouselCaptions[0] ?? '', alt: aboutCarouselCaptions[0] ?? 'Company workspace' },
  { src: picCompany2.src, caption: aboutCarouselCaptions[1] ?? '', alt: aboutCarouselCaptions[1] ?? 'Company classroom space' },
  { src: picCompany3.src, caption: aboutCarouselCaptions[2] ?? '', alt: aboutCarouselCaptions[2] ?? 'Company lounge area' }
];
const fallbackImage = companyGallery[0];
---

<Layout title={`${t('nav.about')} - ${brand}`}>
  <section class="bg-base-200 py-20 md:py-32">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center space-y-6" style="animation: slideInFromLeft 0.6s ease-out both">
      <h1 class="text-4xl sm:text-5xl md:text-6xl font-bold">{t('about.hero.title')}</h1>
      <p class="text-lg sm:text-xl opacity-80 leading-relaxed max-w-3xl mx-auto">
        {t('about.hero.subtitle')}
      </p>
    </div>
  </section>

  <section class="py-16 md:py-24 bg-base-100">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center space-y-6" style="animation: slideInFromLeft 0.6s ease-out both">
      <h2 class="text-3xl sm:text-4xl font-bold">{t('about.gallery.title')}</h2>
      <p class="text-lg opacity-80 leading-relaxed max-w-3xl mx-auto">{t('about.gallery.subtitle')}</p>
      <div class="mt-10" style="animation: slideInFromLeft 0.6s ease-out 0.1s both">
        <CompanyCarousel images={companyGallery} client:visible>
          {fallbackImage && (
            <figure slot="fallback" class="relative w-full max-w-6xl mx-auto h-[26rem] sm:h-[34rem] lg:h-[38rem] overflow-hidden rounded-3xl shadow-2xl">
              <img src={fallbackImage.src} alt={fallbackImage.alt} class="w-full h-full object-cover" loading="lazy" />
            </figure>
          )}
        </CompanyCarousel>
      </div>
    </div>
  </section>

  <section class="py-16 md:py-24">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 grid lg:grid-cols-2 gap-12 items-center">
      <div class="space-y-6" style="animation: slideInFromLeft 0.6s ease-out both">
        <span class="badge badge-primary badge-outline w-fit px-4 py-2 text-xs sm:text-sm uppercase tracking-wide">
          {t('about.story.tagline')}
        </span>
        <h2 class="text-3xl sm:text-4xl font-bold">{t('about.story.title')}</h2>
        <p class="text-base sm:text-lg leading-relaxed opacity-80">
          {t('about.story.description')}
        </p>
        <ul class="space-y-3 text-sm sm:text-base opacity-80 leading-relaxed">
          {storyPoints.map(point => (
            <li class="flex items-start gap-3">
              <span class="text-primary mt-1">•</span>
              <span>{point}</span>
            </li>
          ))}
        </ul>
      </div>
      <div class="card card-border bg-base-100 shadow-lg" style="animation: slideInFromLeft 0.6s ease-out 0.2s both">
        <div class="card-body space-y-4">
          <h3 class="text-xl font-semibold">{t('about.metrics.title')}</h3>
          <div class="grid gap-3">
            {metrics.map((item, index) => (
              <div class="flex items-start gap-3">
                <div class="w-8 h-8 rounded-full bg-primary/10 text-primary flex items-center justify-center font-semibold">
                  {index + 1}
                </div>
                <p class="text-sm sm:text-base opacity-80 leading-relaxed">{item}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="bg-base-200 py-16 md:py-24">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12" style="animation: slideInFromLeft 0.6s ease-out both">
        <h2 class="text-3xl sm:text-4xl font-bold mb-4">{t('about.values.title')}</h2>
        <p class="text-lg opacity-80">{t('about.values.subtitle')}</p>
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8">
        {coreValues.map((value, index) => (
          <div class="card card-border bg-base-100" style={`animation: slideInFromLeft 0.6s ease-out ${0.1 * index}s both`}>
            <div class="card-body gap-4">
              <div class="w-12 h-12 rounded-full bg-primary/10 text-primary flex items-center justify-center">
                {value.icon === 'mentors' ? (
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="square" stroke-linejoin="miter" stroke-width="1.8" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                  </svg>
                ) : value.icon === 'personalized' ? (
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="square" stroke-linejoin="miter" stroke-width="1.8" d="M12 6v6l4 2M5 12a7 7 0 0114 0 7 7 0 01-7 7H7l-2 3"></path>
                  </svg>
                ) : value.icon === 'feedback' ? (
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="square" stroke-linejoin="miter" stroke-width="1.8" d="M21 12a9 9 0 11-5.62-8.32l-.38 2.14A7 7 0 1019 12h2z"></path>
                    <path stroke-linecap="square" stroke-linejoin="miter" stroke-width="1.8" d="M13 12l-2 2-1-1"></path>
                  </svg>
                ) : (
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="square" stroke-linejoin="miter" stroke-width="1.8" d="M4 7h16M4 12h16M4 17h10"></path>
                  </svg>
                )}
              </div>
              <h3 class="text-xl font-semibold">{value.title}</h3>
              <p class="text-sm sm:text-base opacity-80 leading-relaxed">{value.description}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <section class="py-16 md:py-24">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12" style="animation: slideInFromLeft 0.6s ease-out both">
        <h2 class="text-3xl sm:text-4xl font-bold mb-4">{t('about.programs.title')}</h2>
        <p class="text-lg opacity-80 max-w-3xl mx-auto">{t('about.programs.subtitle')}</p>
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6 md:gap-8">
        {programs.map((program, index) => (
          <div class="card card-border bg-base-100 h-full" style={`animation: slideInFromLeft 0.6s ease-out ${0.1 * index}s both`}>
            <div class="card-body space-y-4">
              <div class="badge badge-ghost uppercase tracking-wide w-fit">{program.code}</div>
              <h3 class="text-xl font-semibold leading-tight">{program.title}</h3>
              <p class="text-sm opacity-80 leading-relaxed">{program.summary}</p>
              <p class="text-sm opacity-80 leading-relaxed">{program.detail}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <section class="bg-base-200 py-16 md:py-24">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 grid lg:grid-cols-2 gap-12 items-start">
      <div class="card card-border bg-base-100 shadow-md" style="animation: slideInFromLeft 0.6s ease-out both">
        <div class="card-body space-y-4">
          <h2 class="text-3xl font-bold">{t('about.fulltime.title')}</h2>
          <p class="text-base opacity-80 leading-relaxed">{t('about.fulltime.subtitle')}</p>
          <ul class="space-y-3 text-sm sm:text-base opacity-80 leading-relaxed">
            {fulltimeItems.map(item => (
              <li class="flex items-start gap-3">
                <span class="text-primary mt-1">•</span>
                <span>{item}</span>
              </li>
            ))}
          </ul>
        </div>
      </div>
      <div class="card card-border bg-base-100 shadow-md" style="animation: slideInFromLeft 0.6s ease-out 0.2s both">
        <div class="card-body space-y-4">
          <h2 class="text-3xl font-bold">{t('about.competitions.title')}</h2>
          <p class="text-base opacity-80 leading-relaxed">{t('about.competitions.subtitle')}</p>
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm opacity-80">
            {competitionCategories.map((category, index) => (
              <div class="p-4 rounded-lg border border-base-300 bg-base-100/80 flex items-center gap-3" style={`animation: slideInFromLeft 0.6s ease-out ${0.1 * index}s both`}>
                {category.iconSrc && (
                  <span class="w-10 h-10 rounded-full bg-primary/10 text-primary flex items-center justify-center flex-shrink-0">
                    <img src={category.iconSrc} alt={category.title} class="w-6 h-6 object-contain" loading="lazy" />
                  </span>
                )}
                <h3 class="font-semibold text-base">{category.title}</h3>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="py-16 md:py-24">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 grid lg:grid-cols-2 gap-12">
      <div class="card card-border bg-base-100 shadow-md" style="animation: slideInFromLeft 0.6s ease-out both">
        <div class="card-body space-y-4">
          <h2 class="text-3xl font-bold">{t('about.oxbridge.title')}</h2>
          <p class="text-base opacity-80 leading-relaxed">{t('about.oxbridge.subtitle')}</p>
          <ul class="space-y-3 text-sm sm:text-base opacity-80 leading-relaxed">
            {oxbridgeItems.map(item => (
              <li class="flex items-start gap-3">
                <span class="text-primary mt-1">•</span>
                <span>{item}</span>
              </li>
            ))}
          </ul>
        </div>
      </div>
      <div class="card card-border bg-base-100 shadow-md" style="animation: slideInFromLeft 0.6s ease-out 0.2s both">
        <div class="card-body space-y-4">
          <h2 class="text-3xl font-bold">{t('about.process.title')}</h2>
          <p class="text-base opacity-80 leading-relaxed">{t('about.process.subtitle')}</p>
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
            {processSteps.map((step, index) => (
              <div class="flex items-start gap-3">
                <div class="w-8 h-8 rounded-full bg-primary text-primary-content flex items-center justify-center text-sm font-semibold">
                  {index + 1}
                </div>
                <p class="text-sm sm:text-base opacity-80 leading-relaxed">{step}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="bg-primary text-primary-content py-20 md:py-24">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center space-y-6">
      <h2 class="text-3xl sm:text-4xl font-bold">{t('about.cta.title')}</h2>
      <p class="text-lg opacity-90 leading-relaxed">{t('about.cta.subtitle')}</p>
      <a href="mailto:contact@patioedu.com" class="btn btn-neutral btn-lg">
        {t('about.cta.primary')}
      </a>
    </div>
  </section>
</Layout>
